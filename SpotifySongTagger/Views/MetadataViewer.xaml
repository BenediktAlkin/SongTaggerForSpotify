<UserControl x:Class="SpotifySongTagger.Views.MetadataViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:backend="clr-namespace:Backend.Entities;assembly=Backend"
             xmlns:viewmodels="clr-namespace:SpotifySongTagger.ViewModels"
             xmlns:utils="clr-namespace:SpotifySongTagger.Utils"
             xmlns:converters="clr-namespace:SpotifySongTagger.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance viewmodels:MetadataViewerViewModel}"
             Loaded="UserControl_Loaded"
             Unloaded="UserControl_Unloaded"
             Name="MetadataViewerUserControl">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:PitchConverter x:Key="PitchConverter"/>
            <converters:TimeSignatureConverter x:Key="TimeSignatureConverter"/>
            <converters:ModeConverter x:Key="ModeConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <materialDesign:DialogHost DialogTheme="Inherit">
        <Grid>
            <Grid.Resources>
                <converters:VolumeToIconKindConverter x:Key="VolumeToIconKindConverter"/>
                <converters:DoubleToTextConverter x:Key="VolumeToTextConverter" Format="N0" Suffix="%"/>
                <converters:MsToMinConverter x:Key="MsToMinConverter"/>
                <converters:BooleanToStringConverter x:Key="IsPremiumPlayToolTipConverter" TrueValue="Play" FalseValue="Requires Spotify Premium"/>
                <converters:BooleanToStringConverter x:Key="IsPremiumPauseToolTipConverter" TrueValue="Pause" FalseValue="Requires Spotify Premium"/>
                <converters:BooleanToStringConverter x:Key="IsPremiumEmptyToolTipConverter" FalseValue="Requires Spotify Premium"/>
                <sys:Double x:Key="SpotifyControlSize">24</sys:Double>
                <sys:Double x:Key="SpotifyPlayPauseSize">36</sys:Double>
                <converters:ObjectToTypeNameConverter x:Key="ObjectToTypeNameConverter"/>
                <materialDesign:NullableToVisibilityConverter x:Key="InverseNullableToVisibilityConverter" NullValue="Visible" NotNullValue="Collapsed"/>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- playlists -->
            <TreeView 
                Grid.Row="0" 
                ItemsSource="{Binding PlaylistTreeNodes}"
                SelectedItemChanged="Playlists_SelectionChanged" 
                Visibility="{Binding LoadedPlaylists, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TreeView.Resources>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                        <Style.Triggers>
                            <!-- expand PlaylistTreeNode -->
                            <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeNameConverter}}" Value="PlaylistTreeNode">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <HierarchicalDataTemplate DataType="{x:Type utils:PlaylistTreeNode}" ItemsSource="{Binding Children}">
                        <TextBlock Text="{Binding Name}" Margin="3,2" />
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type backend:TagGroup}" ItemsSource="{Binding Tags}">
                        <TextBlock Text="{Binding Name}" Margin="3,2" />
                    </HierarchicalDataTemplate>
                    <DataTemplate DataType="{x:Type backend:Playlist}">
                        <TextBlock Text="{Binding Name}" Margin="3 2" />
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type backend:Tag}">
                        <TextBlock Text="{Binding Name}" Margin="3 2" />
                    </DataTemplate>
                </TreeView.Resources>
            </TreeView>
            <ProgressBar 
                Grid.Column="0" 
                Visibility="{Binding LoadedPlaylists, Converter={StaticResource InverseBoolToVisConverter}}"
                Style="{StaticResource MaterialDesignCircularProgressBar}"
                Value="0"
                IsIndeterminate="True" />
            
            <GridSplitter Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="1" />
            
            <!-- instructions -->
            <StackPanel 
                Grid.Column="1" 
                HorizontalAlignment="Center" VerticalAlignment="Center" 
                Visibility="{Binding SelectedPlaylistOrTag, Converter={StaticResource InverseNullableToVisibilityConverter}}">
                <StackPanel Orientation="Horizontal" Margin="10">
                    <TextBlock Text="Sync your Spotify library with" VerticalAlignment="Center" Margin="0 0 5 0" Style="{StaticResource MaterialDesignHeadline4TextBlock}"/>
                    <materialDesign:PackIcon Kind="Sync" Width="48" Height="48" VerticalAlignment="Center"/>
                </StackPanel>
                <TextBlock Text="TODO descriptions" Margin="10" Style="{StaticResource MaterialDesignHeadline4TextBlock}"/>
                <StackPanel Orientation="Horizontal" Margin="10">
                    <TextBlock Text="Read more about different types of metadata " VerticalAlignment="Center" Margin="0 0 5 0" Style="{StaticResource MaterialDesignHeadline4TextBlock}"/>
                    <TextBlock Style="{StaticResource MaterialDesignHeadline4TextBlock}" TextDecorations="Underline">
                        <Hyperlink 
                            NavigateUri="https://developer.spotify.com/documentation/web-api/reference/#/operations/get-several-audio-features"
                            RequestNavigate="Hyperlink_RequestNavigate">here</Hyperlink>
                    </TextBlock>
                </StackPanel>
                
            </StackPanel>
            <!-- tracks -->
            <DataGrid 
                Grid.Column="1"
                Grid.ColumnSpan="2"
                ItemsSource="{Binding TrackVMs}" 
                SelectedItem="{Binding SelectedTrackVM}"
                Visibility="{Binding SelectedPlaylistOrTag, Converter={StaticResource NullableToVisibilityConverter}}"
                CanUserAddRows="False" AutoGenerateColumns="False"
                HeadersVisibility="All"
                SelectionMode="Single"
                CanUserReorderColumns="True"
                MouseDoubleClick="PlayTrack"
                RowHeaderWidth="0"
                FrozenColumnCount="1">
                <DataGrid.Resources>
                    <Style x:Key="VerticalCenteredTextColumn" TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                        <Setter Property="VerticalAlignment" Value="Center" />
                    </Style>
                </DataGrid.Resources>
                <!-- remove outline of a selcted cell -->
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <!-- green text if track is currently playing  -->
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                <Setter Property="Foreground" Value="#1ed760" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <!-- select on mouseover -->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="IsSelected" Value="True"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn IsReadOnly="True" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Height="21" Width="21" Source="{Binding PlayerManager.SpotifyLogoUrl}" RenderOptions.BitmapScalingMode="Fant"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn 
                        Binding="{Binding Track.Name}" 
                        Header="Name"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="200"/>
                    <DataGridTextColumn 
                        Binding="{Binding Track.ArtistsString}" 
                        Header="Artists"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="200"/>
                    <DataGridTextColumn 
                        Binding="{Binding Track.Album.Name}" 
                        Header="Album"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.Album.ReleaseYear}" 
                        Header="Year"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.ArtistsGenresString}" 
                        Header="Genres"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="200" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.AcousticnessPercent}" 
                        Header="Acousticness"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto"/>
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.DanceabilityPercent}" 
                        Header="Danceability"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.DurationString}" 
                        Header="Duration"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.EnergyPercent}" 
                        Header="Energy"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.InstrumentalnessPercent}" 
                        Header="Instrumentalness"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.Key, Converter={StaticResource PitchConverter}}" 
                        Header="Key"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.LivenessPercent}" 
                        Header="Liveness"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.Loudness, StringFormat=N0}" 
                        Header="Loudness"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.Mode, Converter={StaticResource ModeConverter}}" 
                        Header="Mode"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.SpeechinessPercent}" 
                        Header="Speechiness"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.Tempo, StringFormat=N0}" 
                        Header="Tempo (BPM)"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.TimeSignature, Converter={StaticResource TimeSignatureConverter}}" 
                        Header="Time Signature"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                    <DataGridTextColumn 
                        Binding="{Binding Track.AudioFeatures.ValencePercent}" 
                        Header="Valence"
                        IsReadOnly="True"
                        ElementStyle="{StaticResource VerticalCenteredTextColumn}"
                        Width="Auto" />
                </DataGrid.Columns>
            </DataGrid>
            <ProgressBar 
                Grid.Column="1" 
                Visibility="{Binding IsLoadingTracks, Converter={StaticResource BooleanToVisibilityConverter}}"
                Style="{StaticResource MaterialDesignCircularProgressBar}"
                Value="0"
                IsIndeterminate="True" />


            <Rectangle
                Visibility="{Binding Settings.HidePlayer, Converter={StaticResource InverseBoolToVisConverter}}"
                Grid.Row="2"
                Grid.ColumnSpan="3"
                Height="1"
                VerticalAlignment="Top"
                Fill="{DynamicResource MaterialDesignDivider}"/>
            
            <!-- Song info -->
            <Grid 
                AllowDrop="True"
                Visibility="{Binding Settings.HidePlayer, Converter={StaticResource InverseBoolToVisConverter}}"
                Grid.Row="1" Grid.Column="0" 
                Background="{DynamicResource MaterialDesignCardBackground}" 
                VerticalAlignment="Stretch">
                <Grid Margin="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Height="80" Width="80" Source="{Binding PlayerManager.AlbumUrl}" RenderOptions.BitmapScalingMode="Fant"/>
                    <StackPanel Grid.Column="1" Margin="10 3 0 0" VerticalAlignment="Center">
                        <Image Height="21" Width="21" Margin="0 0 0 10" 
                               Source="{Binding PlayerManager.SpotifyLogoUrl}" 
                               Visibility="{Binding PlayerManager.HasAlbumUrl, Converter={StaticResource BooleanToVisibilityConverter}}"
                               RenderOptions.BitmapScalingMode="Fant" HorizontalAlignment="Left"/>
                        <TextBlock Text="{Binding PlayerManager.TrackName}" FontWeight="Bold" FontSize="18"/>
                        <TextBlock Text="{Binding PlayerManager.ArtistsString}" FontSize="14"/>
                    </StackPanel>
                </Grid>
            </Grid>
            <!-- controls and song progress -->
            <Grid
                Visibility="{Binding Settings.HidePlayer, Converter={StaticResource InverseBoolToVisConverter}}"
                Grid.Row="1" Grid.Column="1" 
                Background="{DynamicResource MaterialDesignCardBackground}">
                <StackPanel VerticalAlignment="Center">
                    <!-- play/pause control -->
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 0">
                        <Button
                            Padding="0"
                            VerticalAlignment="Center"
                            ToolTip="{Binding PlayerManager.IsPremiumUser, Converter={StaticResource IsPremiumPlayToolTipConverter}}"
                            ToolTipService.ShowOnDisabled="True"
                            Style="{DynamicResource MaterialDesignToolButton}"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                            Click="Play_Click"
                            Visibility="{Binding PlayerManager.IsPlaying, Converter={StaticResource InverseBoolToVisConverter}}"
                            IsEnabled="{Binding PlayerManager.IsPremiumUser}"
                            Height="{StaticResource SpotifyPlayPauseSize}"
                            materialDesign:RippleAssist.IsDisabled="True">
                            <materialDesign:PackIcon 
                                Kind="PlayCircle" 
                                Height="{StaticResource SpotifyPlayPauseSize}" Width="{StaticResource SpotifyPlayPauseSize}"/>
                        </Button>
                        <Button
                            Padding="0"
                            VerticalAlignment="Center"
                            ToolTip="{Binding PlayerManager.IsPremiumUser, Converter={StaticResource IsPremiumPauseToolTipConverter}}"
                            ToolTipService.ShowOnDisabled="True"
                            Style="{DynamicResource MaterialDesignToolButton}"
                            Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                            Click="Pause_Click"
                            Visibility="{Binding PlayerManager.IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"
                            IsEnabled="{Binding PlayerManager.IsPremiumUser}"
                            Height="{StaticResource SpotifyPlayPauseSize}"
                            materialDesign:RippleAssist.IsDisabled="True">
                            <materialDesign:PackIcon 
                                Kind="PauseCircle" 
                                Height="{StaticResource SpotifyPlayPauseSize}" Width="{StaticResource SpotifyPlayPauseSize}"/>
                        </Button>
                    </Grid>
                    <!-- progress -->
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock 
                            Grid.Column="0" 
                            Text="{Binding Progress, Converter={StaticResource MsToMinConverter}}" 
                            Margin="0 0 6 0" 
                            TextAlignment="Right" 
                            VerticalAlignment="Center"/>
                        <Slider 
                            Grid.Column="1" 
                            Value="{Binding Progress}" 
                            Minimum="0" Maximum="{Binding PlayerManager.ProgressMax}" TickFrequency="10"
                            Thumb.DragStarted="SetProgress_DragStarted"
                            Thumb.DragCompleted="SetProgress_DragCompleted"
                            ValueChanged="SetProgress_ValueChanged"
                            ToolTip="{Binding PlayerManager.IsPremiumUser, Converter={StaticResource IsPremiumEmptyToolTipConverter}}"
                            ToolTipService.ShowOnDisabled="True"
                            IsEnabled="{Binding PlayerManager.IsPremiumUser}"/>
                        <TextBlock 
                            Grid.Column="2" 
                            Text="{Binding PlayerManager.ProgressMax, Converter={StaticResource MsToMinConverter}}" 
                            Margin="6 0 0 0" 
                            VerticalAlignment="Center" />
                    </Grid>
                </StackPanel>
            </Grid>
            <!-- volume control -->
            <Grid
                Visibility="{Binding Settings.HidePlayer, Converter={StaticResource InverseBoolToVisConverter}}"
                Grid.Row="1" Grid.Column="2"
                Background="{DynamicResource MaterialDesignCardBackground}">
                <Grid Margin="8 0 24 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <materialDesign:PackIcon 
                        Grid.Column="0"
                        Margin="8"
                        Kind="{Binding Value, ElementName=VolumeSlider, Converter={StaticResource VolumeToIconKindConverter}}" 
                        VerticalAlignment="Center"
                        Height="{StaticResource SpotifyControlSize}" Width="{StaticResource SpotifyControlSize}"/>
                    <Slider 
                        Grid.Column="1" 
                        Value="{Binding Volume}" 
                        Name="VolumeSlider" 
                        Minimum="0" Maximum="100" TickFrequency="1"
                        VerticalAlignment="Center"
                        Thumb.DragStarted="SetVolume_DragStarted"
                        Thumb.DragCompleted="SetVolume_DragCompleted"
                        ValueChanged="SetVolume_ValueChanged"
                        ToolTip="{Binding PlayerManager.IsPremiumUser, Converter={StaticResource IsPremiumEmptyToolTipConverter}}"
                        ToolTipService.ShowOnDisabled="True"
                        IsEnabled="{Binding PlayerManager.IsPremiumUser}"/>
                    <TextBlock 
                        Grid.Column="2" 
                        Text="{Binding Value, ElementName=VolumeSlider, Converter={StaticResource VolumeToTextConverter}}" 
                        VerticalAlignment="Center"
                        Margin="10 0 0 0"/>
                </Grid>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</UserControl>
