name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  main_project_name: SpotifySongTagger
  application_name: Song Tagger for Spotify
  updater_name: Updater
  build_config: Release
  MSBUILD_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\devenv.com

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # prepare version update
    - name: Extract tag
      uses: olegtarasov/get-tag@v2.1
      id: tagName
    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    # update versions locally
    - name: Update application version
      run: python .buildscripts/update_version_csproj.py --tagname ${{ steps.tagName.outputs.tag }} --project-file ${{ env.main_project_name }}/${{ env.main_project_name }}.csproj
    - name: Update updater version
      run: python .buildscripts/update_version_csproj.py --tagname ${{ steps.tagName.outputs.tag }} --project-file ${{ env.updater_name }}/${{ env.updater_name }}.csproj
    - name: Update installer version
      run: python .buildscripts/update_version_vdproj.py --tagname ${{ steps.tagName.outputs.tag }} --project-file Setup/Setup.vdproj
    # push updated version
    - name: Push updated version number
      uses: test-room-7/action-update-file@v1
      with:
          file-path: |
              ${{ env.main_project_name }}/${{ env.main_project_name }}.csproj
              ${{ env.updater_name }}/${{ env.updater_name }}.csproj
              Setup/Setup.vdproj
          commit-msg: Update version number
          github-token: ${{ secrets.GITHUB_TOKEN }}


    # setup runtime
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        

    # publish program to {application_name}/{build_config}
    - name: Publish program
      run: dotnet publish ${{ env.main_project_name }} --configuration ${{ env.build_config }} -o "${{ env.application_name }}/${{ env.build_config }}"
    # publish updater to {application_name}/{build_config}
    - name: Publish updater
      run: dotnet publish ${{ env.updater_name }} --configuration ${{ env.build_config }} -o "${{ env.application_name }}/${{ env.build_config }}"
    # publish setup project to Setup/{build_config}
    - name: Publish setup
      shell: cmd
      run: |
        "%MSBUILD_PATH%" ${{ env.main_project_name }}_minimal.sln /Project Setup/Setup.vdproj /Build ${{ env.build_config }}
    
    # zip {application_name}/{build_config} into a zip file where the root folder has name {application_name}
    - name: Zip portable build
      uses: papeloto/action-zip@v1
      with:
        files: "${{ env.application_name }}/${{ env.build_config }}"
        dest: "Releases/${{ env.application_name }} Portable.zip"
        recursive: false
    # rename setup.exe
    - name: Rename setup
      run: |
        cd Setup/${{ env.build_config }} && ren setup.exe "${{ env.application_name }} Installer.exe"


    # make git release
    - name: Release build
      uses: softprops/action-gh-release@v1
      with:
        files: |
          "Releases/${{ env.application_name }} Portable.zip"
          "Setup/${{ env.build_config }}/${{ env.application_name }} Installer.exe"